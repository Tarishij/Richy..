Start - keyword
Int - keyword
func - identifier
( - delimiter
Int - keyword
) - delimiter
; - symbol
main - identifier
{ - delimiter
Int - keyword
a - identifier
, - symbol
b - identifier
, - symbol
d - identifier
, - symbol
f - identifier
Float - keyword
c - identifier
c - identifier
= - assignment operator
5 - integer
; - symbol
b - identifier
= - assignment operator
a - identifier
** - operator
2 - integer
+ - operator
( - delimiter
6 - integer
* - operator
2 - integer
+ - operator
5 - integer
/ - operator
3 - integer
) - delimiter
; - symbol
c - identifier
= - assignment operator
# - operator
b - identifier
; - symbol
if - keyword
( - delimiter
c - identifier
is - keyword
Int - keyword
) - delimiter
{ - delimiter
print - keyword
( - delimiter
c - identifier
) - delimiter
; - symbol
} - delimiter
else - keyword
{ - delimiter
d - identifier
= - assignment operator
>> - ceil
c - identifier
; - symbol
f - identifier
= - assignment operator
<< - floor
c - identifier
; - symbol
print - keyword
( - delimiter
c - identifier
, - symbol
" - symbol
lies - identifier
within - identifier
" - symbol
, - symbol
f - identifier
, - symbol
d - identifier
) - delimiter
; - symbol
} - delimiter
func - identifier
( - delimiter
c - identifier
) - delimiter
; - symbol
} - delimiter
Int - keyword
func - identifier
( - delimiter
Int - keyword
val - identifier
) - delimiter
{ - delimiter
val - identifier
= - assignment operator
9 - integer
; - symbol
} - delimiter
End - keyword
